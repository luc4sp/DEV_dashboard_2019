### This file was autogenerated by Nexus 0.11.7
### Do not make changes to this file directly


type AggregateUser {
  count: Int!
}

type AggregateWidget {
  count: Int!
}

type Auth {
  token: String
  User: User
}

type Mutation {
  createWidget(data: WidgetCreateInput!): Widget!
  login(email: String!, password: String!): Auth
  signup(email: String!, firstName: String!, lastName: String!, password: String!): Auth
  updateMe(data: UpdateUserField!): User
  updateWidget(data: WidgetUpdateInput!, where: WidgetWhereUniqueInput!): Widget
}

type PageInfo {
  endCursor: String
  hasNextPage: Boolean!
  hasPreviousPage: Boolean!
  startCursor: String
}

type Query {
  me: User
  user(where: UserWhereUniqueInput!): User
  users(after: String, before: String, first: Int, last: Int, orderBy: UserOrderByInput, skip: Int, where: UserWhereInput): [User!]!
  usersConnection(after: String, before: String, first: Int, last: Int, orderBy: UserOrderByInput, skip: Int, where: UserWhereInput): UserConnection!
  widget(where: WidgetWhereUniqueInput!): Widget
  widgets(after: String, before: String, first: Int, last: Int, orderBy: WidgetOrderByInput, skip: Int, where: WidgetWhereInput): [Widget!]!
  widgetsConnection(after: String, before: String, first: Int, last: Int, orderBy: WidgetOrderByInput, skip: Int, where: WidgetWhereInput): WidgetConnection!
}

input UpdateUserField {
  email: String
  firstName: String
  lastName: String
  widgets: UpdateUserWidgetsInput
}

input UpdateUserWidgetsInput {
  connect: [WidgetWhereUniqueInput!]
  disconnect: [WidgetWhereUniqueInput!]
}

type User {
  email: String!
  firstName: String!
  id: ID!
  lastName: String!
  password: String!
  type: UserType
  widgets(after: String, before: String, first: Int, last: Int, orderBy: WidgetOrderByInput, skip: Int, where: WidgetWhereInput): [Widget!]
}

type UserConnection {
  aggregate: AggregateUser!
  edges: [UserEdge!]!
  pageInfo: PageInfo!
}

type UserEdge {
  cursor: String!
  node: User!
}

enum UserOrderByInput {
  createdAt_ASC
  createdAt_DESC
  email_ASC
  email_DESC
  firstName_ASC
  firstName_DESC
  id_ASC
  id_DESC
  lastName_ASC
  lastName_DESC
  password_ASC
  password_DESC
  type_ASC
  type_DESC
  updatedAt_ASC
  updatedAt_DESC
}

enum UserType {
  ADMIN
  USER
}

input UserWhereInput {
  AND: [UserWhereInput!]
  email: String
  email_contains: String
  email_ends_with: String
  email_gt: String
  email_gte: String
  email_in: [String!]
  email_lt: String
  email_lte: String
  email_not: String
  email_not_contains: String
  email_not_ends_with: String
  email_not_in: [String!]
  email_not_starts_with: String
  email_starts_with: String
  firstName: String
  firstName_contains: String
  firstName_ends_with: String
  firstName_gt: String
  firstName_gte: String
  firstName_in: [String!]
  firstName_lt: String
  firstName_lte: String
  firstName_not: String
  firstName_not_contains: String
  firstName_not_ends_with: String
  firstName_not_in: [String!]
  firstName_not_starts_with: String
  firstName_starts_with: String
  id: ID
  id_contains: ID
  id_ends_with: ID
  id_gt: ID
  id_gte: ID
  id_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_not: ID
  id_not_contains: ID
  id_not_ends_with: ID
  id_not_in: [ID!]
  id_not_starts_with: ID
  id_starts_with: ID
  lastName: String
  lastName_contains: String
  lastName_ends_with: String
  lastName_gt: String
  lastName_gte: String
  lastName_in: [String!]
  lastName_lt: String
  lastName_lte: String
  lastName_not: String
  lastName_not_contains: String
  lastName_not_ends_with: String
  lastName_not_in: [String!]
  lastName_not_starts_with: String
  lastName_starts_with: String
  NOT: [UserWhereInput!]
  OR: [UserWhereInput!]
  password: String
  password_contains: String
  password_ends_with: String
  password_gt: String
  password_gte: String
  password_in: [String!]
  password_lt: String
  password_lte: String
  password_not: String
  password_not_contains: String
  password_not_ends_with: String
  password_not_in: [String!]
  password_not_starts_with: String
  password_starts_with: String
  type: UserType
  type_in: [UserType!]
  type_not: UserType
  type_not_in: [UserType!]
  widgets_every: WidgetWhereInput
  widgets_none: WidgetWhereInput
  widgets_some: WidgetWhereInput
}

input UserWhereUniqueInput {
  email: String
  id: ID
}

type Widget {
  id: ID!
  settings: String!
  type: WidgetType!
}

type WidgetConnection {
  aggregate: AggregateWidget!
  edges: [WidgetEdge!]!
  pageInfo: PageInfo!
}

input WidgetCreateInput {
  id: ID
  settings: String!
  type: WidgetType!
}

type WidgetEdge {
  cursor: String!
  node: Widget!
}

enum WidgetOrderByInput {
  createdAt_ASC
  createdAt_DESC
  id_ASC
  id_DESC
  settings_ASC
  settings_DESC
  type_ASC
  type_DESC
  updatedAt_ASC
  updatedAt_DESC
}

enum WidgetType {
  CALCULATOR
  CRYPTOEXCHANGER
  EXCHANGER
  JOKE
  PASSWORD
  RANDOMTHING
  WEATHER
}

input WidgetUpdateInput {
  settings: String
  type: WidgetType
}

input WidgetWhereInput {
  AND: [WidgetWhereInput!]
  id: ID
  id_contains: ID
  id_ends_with: ID
  id_gt: ID
  id_gte: ID
  id_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_not: ID
  id_not_contains: ID
  id_not_ends_with: ID
  id_not_in: [ID!]
  id_not_starts_with: ID
  id_starts_with: ID
  NOT: [WidgetWhereInput!]
  OR: [WidgetWhereInput!]
  settings: String
  settings_contains: String
  settings_ends_with: String
  settings_gt: String
  settings_gte: String
  settings_in: [String!]
  settings_lt: String
  settings_lte: String
  settings_not: String
  settings_not_contains: String
  settings_not_ends_with: String
  settings_not_in: [String!]
  settings_not_starts_with: String
  settings_starts_with: String
  type: WidgetType
  type_in: [WidgetType!]
  type_not: WidgetType
  type_not_in: [WidgetType!]
}

input WidgetWhereUniqueInput {
  id: ID
}
